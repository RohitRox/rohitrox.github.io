<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: emberjs | Blog @ RohitRox]]></title>
  <link href="http://rohitrox.github.io/blog/categories/emberjs/atom.xml" rel="self"/>
  <link href="http://rohitrox.github.io/"/>
  <updated>2014-05-03T00:14:38+05:45</updated>
  <id>http://rohitrox.github.io/</id>
  <author>
    <name><![CDATA[Rohit Rox]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Emberjs and Highcharts]]></title>
    <link href="http://rohitrox.github.io/2014/03/16/emberjs-and-highcharts/"/>
    <updated>2014-03-16T15:13:00+05:45</updated>
    <id>http://rohitrox.github.io/2014/03/16/emberjs-and-highcharts</id>
    <content type="html"><![CDATA[<p>Lets write a reusable ember view for rendering graphs and charts powered by <a href="http://highcharts.com">highcharts</a>.</p>

<p>``` coffeescript</p>

<pre><code>App.HighChartsView = Ember.View.extend
  tagName: 'div'
  classNames: [ 'highcharts' ]
  chartConfig = {}

  setConfig: (type)-&gt;
    config = {
      chart:
        type: type
      title:
        text: @title || 'Highcharts'
      xAxis:
        categories: @dataset.categories || []
      yAxis:
          title:
            text: @yAxisTitle
      series: @series()
    }
    # Merge highcharts config if it is present
    Ember.merge(config, @highChartConfig) if @highChartConfig
    @set('chartConfig', config)

  series: -&gt;
    @dataset.data

  prepareConfig: -&gt;
    # if custom config is present then directly set it to chartConfig
    if @customHighChartConfig
      @set('chartConfig', @customHighChartConfig)
    else
      type = @type || 'line'
      @setConfig(type)

  didInsertElement: -&gt;
    @prepareConfig()
    @renderHighchart()

  renderHighchart: -&gt;
    @$().highcharts(@chartConfig)
</code></pre>

<p>```</p>

<p>Usage:</p>

<p>
<code>
  {{ view App.HighChartsView dataset=dataset title="Sample Analytics" type="line" yAxisTitle='Temperature C' }}
</code>
</p>

<p>Th dataset can be set at controller or may be at route.</p>

<p>
```
  App.IndexController = Ember.ArrayController.extend</p>

<pre><code>dataset: {
  categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun','Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
  data: [{
            name: 'Tokyo',
            data: [7.0, 6.9, 9.5, 14.5, 18.2, 21.5, 25.2, 26.5, 23.3, 18.3, 13.9, 9.6]
        }, {
            name: 'New York',
            data: [-0.2, 0.8, 5.7, 11.3, 17.0, 22.0, 24.8, 24.1, 20.1, 14.1, 8.6, 2.5]
        }, {
            name: 'Berlin',
            data: [-0.9, 0.6, 3.5, 8.4, 13.5, 17.0, 18.6, 17.9, 14.3, 9.0, 3.9, 1.0]
        }, {
            name: 'London',
            data: [3.9, 4.2, 5.7, 8.5, 11.9, 15.2, 17.0, 16.6, 14.2, 10.3, 6.6, 4.8]
        }]
  }
</code></pre>

<p>```
</p>

<p>Usage with control over config</p>

<p>
<code>
  {{ view App.HighChartsView dataset=dataset highChartConfig=highChartConfig title="Sample Analytics" type="line" }}
</code>
</p>

<p>
```
  App.IndexController = Ember.ArrayController.extend</p>

<pre><code>highChartConfig: {
  yAxis: {
    title: {
        text: 'Temperature (°C)'
    },
    plotLines: [{
        value: 0,
        width: 1,
        color: '#808080'
    }]
  },
  tooltip: {
      valueSuffix: '°C'
    }
  }
</code></pre>

<p>```
</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hangman game with emberjs]]></title>
    <link href="http://rohitrox.github.io/2014/02/20/hangman-game-with-emberjs/"/>
    <updated>2014-02-20T18:00:00+05:45</updated>
    <id>http://rohitrox.github.io/2014/02/20/hangman-game-with-emberjs</id>
    <content type="html"><![CDATA[<p>I built hangman game with emberjs, <a href="http://rohitrox.github.io/hangman-with-ember">quick prevew</a>. The game deals with more of view stuffs than other parts, I would like to share some thoughts and tricks I learned during the process.</p>

<p><img src="/images/blog_post_images/hangman-ember.png" alt="hangman game with emberjs" /></p>

<p>I am not an ember expert so the way I have done may not be the optimal way of doing things in ember. Instead of walking through each steps, the code is well commented you can easily walk through, here I will describe striking stuffs.</p>

<!-- more -->


<h3>View and Controller back-and-forth</h3>

<p>As you can see in the UI we have buttons with alphabets through which we capture user input. For this, I created my own input view that extended from Ember.TextField.</p>

<p>``` coffeescript</p>

<pre><code># app/views/hangman_input.coffee
App.HangmanInputView = Ember.TextField.extend
  type: "button"
  resetted: false
  didInsertElement: -&gt;
    @get('targetObject').on('reset', $.proxy(@reset, @));
  click: -&gt;
    value = @get('value')
    controller = @get('targetObject')
    controller.send('submit', value)
    if @resetted
      @set('resetted', false)
    else
      @toggleProperty('disabled')
  reset: -&gt;
    @set('disabled', false)
    @set('resetted', true)
</code></pre>

<p>```</p>

<p>We get the current controller via <code>@get('targetObject')</code> then we can call action of controller with send.</p>

<p>We also need to be able to trigger view action &lsquo;reset&rsquo; from the controller. The reset action resets the the input panel.</p>

<p>The trick is well described <a href="http://stackoverflow.com/questions/15991871/ember-js-how-to-trigger-view-method-from-controller">here</a> using Ember.Evented mixin.</p>

<h2>Controller properties sortable</h2>

<p>I have set scores in the setupConctroller of IndexRoute. What I want to do it, for each game session I create a Score model and push it to scores but I want to be auto sorted by latest &lsquo;id&rsquo;. For this we can do something like this</p>

<p>``` coffeescript</p>

<pre><code># app/routes/index.coffee
App.IndexRoute = Ember.Route.extend
  model: -&gt;
    # ...
    score = @store.createRecord('score',{value: 0})
    # sort scores by id desc so that latest score comes on top in UI
    scores = Ember.ArrayProxy.createWithMixins Ember.SortableMixin,
      content: [controller.current_score]
      sortProperties: ['id']
      sortAscending: false
    controller.set('scores', scores)
</code></pre>

<p>```</p>

<h2>Helpers Gotchas</h2>

<p>I wrote a helper to display the green bars that represents the life.</p>

<p>``` coffeescript
  # app/helpers/life_blocks.coffee
  Ember.Handlebars.registerHelper &ldquo;life_blocks&rdquo;, (n) &ndash;></p>

<pre><code>accum = ""
i = 0
n = @get(n)
while i &lt; n
  accum += '&lt;div&gt;&lt;/div&gt;'
  ++i
accum
new Handlebars.SafeString(accum)
</code></pre>

<p>```</p>

<p>And from template we could do something like</p>

<p>
``` html
  <div class="life"></p>

<pre><code>{{ life_blocks life }}
</code></pre>

<p>  </div></p>

<p>```

life is a property in the controller.</p>

<p>Now what happens is by default life here is not bound to the life property in controller. So the trick is register helper with  &lsquo;Ember.Handlebars.registerBoundHelper&rsquo;</p>

<p>Rest others are pretty straight forward.</p>

<p>I have used brunch with tapas-with-ember. I found brunch better than grunt.</p>

<p>I would love to hear feedback and corrections where necessary.</p>
]]></content>
  </entry>
  
</feed>
